name: Auto Release

on:
  push:
    tags:
      - "v*"

jobs:
  build-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.22.5"

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Build binaries
        env:
          CGO_ENABLED: 0
        run: |
          mkdir -p dist
          # Linux构建 (amd64)
          GOOS=linux GOARCH=amd64 CGO_ENABLED=0 go build -ldflags "-s -w" -o dist/iggen-linux-amd64 ./main.go
          # Windows构建 (amd64)
          GOOS=windows GOARCH=amd64 CGO_ENABLED=0 go build -ldflags "-s -w" -o dist/iggen-windows-amd64.exe ./main.go

      - name: Package Release Files
        run: |
          cd dist

          # 创建发布目录
          mkdir -p release
          VERSION=${GITHUB_REF#refs/tags/}

          # Linux版本：创建tar.gz
          mkdir -p iggen-${VERSION}-linux-amd64
          cp iggen-linux-amd64 iggen-${VERSION}-linux-amd64/iggen
          cp ../README.md iggen-${VERSION}-linux-amd64/
          cp ../LICENSE iggen-${VERSION}-linux-amd64/
          tar -czf release/iggen-${VERSION}-linux-amd64.tar.gz iggen-${VERSION}-linux-amd64

          # Windows版本：创建zip
          mkdir -p iggen-${VERSION}-windows-amd64
          cp iggen-windows-amd64.exe iggen-${VERSION}-windows-amd64/iggen.exe
          cp ../README.md iggen-${VERSION}-windows-amd64/
          cp ../LICENSE iggen-${VERSION}-windows-amd64/
          zip -r release/iggen-${VERSION}-windows-amd64.zip iggen-${VERSION}-windows-amd64

          # 生成校验和
          cd release
          sha256sum * > SHA256SUMS
          cd ..

      - name: Generate Changelog
        id: changelog
        run: |
          # 获取最新的tag
          LATEST_TAG=$(git describe --tags --abbrev=0 || echo "")

          # 生成变更日志
          echo "CHANGELOG<<EOF" >> $GITHUB_ENV
          echo "## What's Changed" >> $GITHUB_ENV

          if [ -n "$LATEST_TAG" ]; then
            # 尝试获取上一个tag
            PREVIOUS_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")

            if [ -n "$PREVIOUS_TAG" ]; then
              # 如果有上一个tag，显示两个tag之间的变更
              git log --pretty=format:"* %s" $PREVIOUS_TAG..$LATEST_TAG >> $GITHUB_ENV
            else
              # 如果是第一个tag，显示所有历史
              git log --pretty=format:"* %s" >> $GITHUB_ENV
            fi
          else
            echo "* Initial release" >> $GITHUB_ENV
          fi

          echo "\n## Checksums" >> $GITHUB_ENV
          echo "\`\`\`" >> $GITHUB_ENV
          cat dist/release/SHA256SUMS >> $GITHUB_ENV
          echo "\`\`\`" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            dist/release/*
          body: ${{ env.CHANGELOG }}
          draft: false
          prerelease: false
